<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>EcoTech BH - Início</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <style>
:root {
    --primary-font: 'Roboto', sans-serif;
    --text-color-body: #333;
    --text-color-paragraphs: #454545;
    --text-color-strong: #2c3e50;
    --text-color-list-strong: #000;
    --text-color-footer: #555;
    --text-color-address: #454545;
    
    --color-primary: #2c3e50; 
    --color-secondary: #4a69bd; 
    --color-tertiary: #34495e; 
    --color-text-on-active: #fff; 
    --color-text-on-secondary: #fff;

    --bg-body: #f0f2f5; 
    --bg-sidebar: #fff; 
    --bg-sidebar-hover: #e6eaf3; 
    --bg-sidebar-active: #2c3e50;
    --bg-content: #fff;
    --bg-footer: #dde3ee;
    --bg-icon-user: #000;
    --bg-icon-user-hover: #222;
    --color-icon-user: #fff;
    --bg-article-guide: #fdfdff; /* Para acordeão no Guia e .box na index */
    
    --border-color-light: #e3eaf6;
    --border-color-medium: #c5cde0;
    --border-color-footer: #c5cde0;
    --border-color-h3: var(--color-secondary); /* Para H3 da página "Sobre" original */
    --border-color-map-placeholder: #ccc; /* de sobre.html original */
    
    --shadow-light: rgba(0, 0, 0, 0.05);
    --shadow-medium: rgba(0, 0, 0, 0.07);
    --shadow-strong: rgba(0, 0, 0, 0.1);
    --shadow-dark: rgba(0, 0, 0, 0.2);
    --shadow-sidebar-mobile: rgba(0,0,0,0.1);
    --shadow-accordion: rgba(0,0,0,0.05); /* Do Guia de Descarte */

    --border-radius-main: 12px;
    --border-radius-links: 8px;
    --border-radius-icon-user: 10px;
    --border-radius-button: 6px;

    --line-height-base: 1.6;
    --line-height-content-text: 1.7;
}
* { box-sizing: border-box; margin: 0; padding: 0; }
body { font-family: var(--primary-font); display: flex; flex-direction: column; min-height: 100vh; background-color: var(--bg-body); color: var(--text-color-body); line-height: var(--line-height-base); }
.page-wrapper { display: flex; flex-grow: 1; width: 100%; margin: 0; gap: 30px; padding-right: 30px; padding-bottom: 20px; }

/* Menu Lateral (Estilos Padronizados) */
.menu-container { background-color: var(--bg-sidebar); box-shadow: 0 4px 15px var(--shadow-strong); padding: 30px 20px; width: 280px; box-sizing: border-box; flex-shrink: 0; position: sticky; top: 0; left: 0; height: 100vh; border-radius: 0 var(--border-radius-links) var(--border-radius-links) 0; display: flex; flex-direction: column; align-items: center; }
.menu-header { text-align: center; margin-bottom: 30px; width: 100%; }
.menu-header h1 { color: var(--color-primary); font-size: 2em; margin: 0; font-weight: 700; }
.menu-header p { color: var(--color-secondary); font-size: 1.2em; margin-top: 5px; font-weight: 700; }
.menu-list { list-style: none; padding: 0; margin: 0; width: 100%; }
.menu-item { margin-bottom: 15px; }
.menu-item:last-child { margin-bottom: 0; }
.menu-item a { display: flex; align-items: center; padding: 12px 15px; text-decoration: none; color: var(--color-tertiary); font-size: 1.1em; border-radius: var(--border-radius-links); transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease; }
.menu-item a:hover { background-color: var(--bg-sidebar-hover); color: var(--color-secondary); transform: translateX(5px); box-shadow: 0 2px 8px var(--shadow-light); }
.menu-item a.active { background-color: var(--bg-sidebar-active); color: var(--color-text-on-active); font-weight: 700; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); transform: none; }
.menu-item a.active .menu-icon { color: var(--color-text-on-active); }
.menu-icon { margin-right: 15px; font-size: 1.4em; color: #6c7a89; transition: color 0.3s ease; }
.menu-item a:hover .menu-icon { color: var(--color-secondary); }

/* Menu Usuário Topo Direito e Dropdown (Estilos Padronizados) */
.user-menu-container { position: fixed; top: 30px; right: 40px; z-index: 1000; }
.user-top-right { width: 44px; height: 44px; background-color: var(--bg-icon-user); border-radius: var(--border-radius-icon-user); display: flex; align-items: center; justify-content: center; cursor: pointer; box-shadow: 0 2px 6px var(--shadow-dark); transition: background-color 0.3s ease; text-decoration: none; }
.user-top-right svg { fill: var(--color-icon-user); width: 24px; height: 24px; }
.user-top-right:hover { background-color: var(--bg-icon-user-hover); }
.dropdown-menu { position: absolute; top: calc(100% + 10px); right: 0; background-color: var(--bg-content); border-radius: var(--border-radius-links); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); min-width: 230px; padding: 15px; display: none; opacity: 0; transform: translateY(-10px); transition: opacity 0.2s ease-out, transform 0.2s ease-out; overflow: hidden; }
.dropdown-menu.active { display: block; opacity: 1; transform: translateY(0); }
.dropdown-menu h3 { font-size: 1.1em; color: var(--color-primary); margin-bottom: 10px; padding-bottom: 8px; border-bottom: 1px solid var(--border-color-light); font-weight: 600; }
.dropdown-menu ul { list-style: none; padding: 0; margin-bottom: 15px; }
.dropdown-menu ul li { margin-bottom: 8px; }
.dropdown-menu ul li:last-child { margin-bottom: 0; }
.dropdown-menu ul li a { display: block; padding: 8px 10px; color: var(--text-color-body); text-decoration: none; font-size: 0.95em; transition: background-color 0.2s ease, color 0.2s ease; border-radius: 4px; white-space: nowrap; }
.dropdown-menu ul li a:hover { background-color: #f0f0f0; color: var(--color-primary); }
.dropdown-menu .logout-button { display: block; width: 100%; padding: 10px 15px; background-color: #e74c3c; color: var(--color-text-on-active); border: none; border-radius: var(--border-radius-button); font-size: 1em; font-weight: 600; cursor: pointer; text-align: center; text-decoration: none; transition: background-color 0.2s ease, box-shadow 0.2s ease; }
.dropdown-menu .logout-button:hover { background-color: #c0392b; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2); }

/* Conteúdo Principal (Estilos Padronizados e Específicos) */
main.content { flex-grow: 1; padding: 40px 48px; background-color: var(--bg-content); border-radius: var(--border-radius-main); margin-top: 20px; margin-bottom: 20px; box-shadow: 0 6px 18px var(--shadow-medium); max-width: 960px; width: 100%; margin-left: auto; margin-right: auto; }
main.content section { margin-bottom: 35px; }
main.content section:last-of-type { margin-bottom: 0; }
main.content h2 { /* Estilo base para H2 */
    margin-bottom: 20px; color: var(--color-primary); font-size: 2.1em; font-weight: 700;
    letter-spacing: 0.02em; padding-bottom: 10px; border-bottom: 2px solid var(--border-color-light); display: inline-block;
}
/* Estilo H2 específico para Guia de Descarte (seção introducao-guia) */
main.content #introducao-guia h2 { display: block; padding-left: 15px; padding-bottom: 10px; border-left: 5px solid var(--color-primary); border-bottom: none; margin-bottom: 30px; }
/* Estilo H2 específico para Guia de Descarte (seção guia-por-tipo) */
main.content #guia-por-tipo h2 { display: block; text-align: center; margin-bottom: 30px; border-bottom: none; padding-bottom: 0; }
/* Estilo H2 específico para Pontos de Descarte (centralizado) */
/* (Se o H2 da página de Pontos precisar ser diferente do base, adicionar um ID e estilizar aqui) */
/* Ex: main.content #pontos-titulo h2 { text-align: center; border-bottom: none; } */

main.content p { margin-bottom: 20px; font-size: 1.05em; color: var(--text-color-paragraphs); line-height: var(--line-height-content-text); }
main.content p:last-child { margin-bottom: 0; }
main.content > section > ul:not(.accordion-content ul) { margin-bottom: 20px; font-size: 1.05em; color: var(--text-color-paragraphs); line-height: var(--line-height-content-text); list-style: none; padding-left: 0; }
main.content > section > ul:not(.accordion-content ul) li { padding-left: 30px; position: relative; margin-bottom: 12px; }
main.content > section > ul:not(.accordion-content ul) li::before { content: '➔'; position: absolute; left: 0; top: -1px; color: var(--color-secondary); font-size: 1.2em; font-weight: bold; }
main.content strong { font-weight: 600; color: var(--text-color-strong); }

/* Estilos para .container-das-caixas e .box (Específicos da index.html / sobre.html anterior) */
.container-das-caixas { display: grid; grid-template-columns: repeat(3, 1fr); gap: 25px; margin-top: 25px; }
.box { border: 1px solid var(--border-color-medium); padding: 25px; border-radius: var(--border-radius-main); text-align: left; transition: transform 0.3s ease, box-shadow 0.3s ease; background-color: var(--bg-article-guide); box-shadow: 0 2px 4px rgba(0,0,0,0.04); display: flex; flex-direction: column; height: 100%; }
.box p { font-size: 1rem; margin-bottom: 0; line-height: 1.5; color: var(--text-color-body); flex-grow: 1; }
.box p strong { color: var(--color-primary); display: block; margin-bottom: 12px; font-weight: bold; font-size: 1.2em; }
.box:hover { transform: translateY(-6px); box-shadow: 0 5px 15px rgba(0,0,0,0.1); }

/* Estilos para Acordeão (Do Guia de Descarte) */
.accordion-item { background-color: var(--bg-article-guide); border: 1px solid var(--border-color-medium); border-radius: var(--border-radius-links); margin-bottom: 15px; box-shadow: 0 1px 3px var(--shadow-accordion); overflow: hidden; }
.accordion-header { background-color: var(--bg-sidebar); padding: 15px 20px; cursor: pointer; display: flex; justify-content: space-between; align-items: center; transition: background-color 0.2s ease; color: var(--color-primary); font-size: 1.3em; font-weight: 600; margin: 0; border-bottom: 1px solid var(--border-color-medium); }
.accordion-header[aria-expanded="true"] { border-bottom-color: transparent; }
.accordion-header:hover, .accordion-header:focus { background-color: var(--bg-sidebar-hover); outline: 2px solid transparent; outline-offset: 2px; }
.accordion-header:focus-visible { outline: 2px solid var(--color-secondary); }
.accordion-header .title-icon { margin-right: 10px; color: var(--color-secondary); font-size: 1em; width: 20px; text-align: center; }
.accordion-header .accordion-title-text { flex-grow: 1; }
.accordion-header .accordion-icon { font-size: 0.9em; transition: transform 0.3s ease-in-out; color: var(--color-secondary); }
.accordion-header[aria-expanded="true"] .accordion-icon { transform: rotate(180deg); }
.accordion-content { padding: 20px; border-top: 1px solid var(--border-color-medium); background-color: var(--bg-article-guide); }
.accordion-content ul { list-style: disc; padding-left: 25px; margin-bottom: 0; font-size: 1em; color: var(--text-color-paragraphs); line-height: var(--line-height-content-text); }
.accordion-content ul li { padding-left: 0px; margin-bottom: 10px; position: static; }
.accordion-content ul li::before { content: ''; }
.accordion-content ul li strong { color: var(--text-color-list-strong); }
.accordion-content ul ul { list-style: circle; margin-top: 8px; padding-left: 20px; }

/* Estilo para Dicas Gerais (Do Guia de Descarte) */
#dicas-gerais ul { list-style: none; padding-left: 0; }
#dicas-gerais ul li { padding-left: 35px; position: relative; margin-bottom: 12px; font-size: 1.05em; color: var(--text-color-paragraphs); line-height: var(--line-height-content-text); }
#dicas-gerais ul li::before { font-family: "Font Awesome 5 Free"; content: '\f0eb'; font-weight: 900; position: absolute; left: 0; top: 0px; color: var(--color-secondary); font-size: 1.3em; }

/* Estilos para Pontos de Descarte (search e cards) */
.search-container { margin-bottom: 30px; position: relative; background-color: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.07); }
.search-input { width: 100%; padding: 12px 15px 12px 40px; border: 1px solid #ced4da; border-radius: 8px; font-size: 1em; transition: border-color 0.3s ease, box-shadow 0.3s ease; }
.search-input:focus { border-color: #3f51b5; box-shadow: 0 0 0 3px rgba(63, 81, 181, 0.25); outline: none; }
.search-container .search-icon { position: absolute; left: 12px; top: 50%; transform: translateY(-50%); color: #6c757d; font-size: 1.1em; padding-left: 15px; }
@keyframes fadeInUp { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }
.pontos-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 24px; }
.ponto-card { background-color: #ffffff; border-radius: 10px; padding: 20px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); color: #333; transition: box-shadow .3s ease,transform .3s ease; opacity:0; transform:translateY(20px); animation:fadeInUp .5s ease-out forwards; display:flex; flex-direction:column }
/* ... (outros estilos de .ponto-card e seus filhos) ... */
.pontos-grid > .ponto-card:nth-child(1) { animation-delay: 0.05s; }
.pontos-grid > .ponto-card:nth-child(2) { animation-delay: 0.1s; }
.pontos-grid > .ponto-card:nth-child(3) { animation-delay: 0.15s; }
.pontos-grid > .ponto-card:nth-child(4) { animation-delay: 0.2s; }
.ponto-card:hover { box-shadow: 0 6px 16px rgba(0,0,0,0.12); transform: translateY(-4px); }
.ponto-card h3 { color: var(--color-secondary); font-weight: 600; margin-bottom: 8px; font-size: 1.25em; }
.ponto-card p { margin-bottom: 10px; font-size: 0.95em; line-height: 1.5; color: #555; }
.ponto-card p.card-description { min-height: 50px; }
.info-line { display: flex; align-items: center; margin-bottom: 8px; font-size: 0.9em; color: #454545; }
.info-line i { color: var(--color-secondary); margin-right: 8px; width: 16px; text-align: center; }
.action-link { display: inline-block; color: var(--color-secondary); font-weight: 600; text-decoration: none; transition: color .3s ease,transform .2s ease; margin-top: auto; padding-top: 10px; font-size: .95em; align-self: flex-start; }
.action-link:hover { color: var(--color-primary); transform: translateX(3px); }
.action-link i { margin-left: 5px; transition: transform .2s ease; }
.action-link:hover i { transform: translateX(2px); }


/* Estilos para Modais Personalizados */
.custom-modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.6); display: none; align-items: center; justify-content: center; z-index: 2000; padding: 15px; }
.custom-modal-box { background-color: var(--bg-content, #fff); padding: 30px 35px; border-radius: var(--border-radius-main, 12px); box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15); text-align: center; width: auto; max-width: 420px; min-width: 300px; animation: fadeInModal 0.3s ease-out; }
/* @keyframes fadeInModal já definido para os cards, pode ser reutilizado */
.custom-modal-box p { font-size: 1.15em; color: var(--text-color-body, #333); margin-top: 0; margin-bottom: 25px; line-height: 1.6; }
.custom-modal-buttons { display: flex; justify-content: center; gap: 15px; }
.custom-modal-buttons button { padding: 12px 25px; border: none; border-radius: var(--border-radius-button, 6px); font-size: 0.95em; font-weight: 600; cursor: pointer; transition: background-color 0.2s ease, transform 0.1s ease, box-shadow 0.2s ease; min-width: 110px; }
.custom-modal-buttons button:hover { transform: translateY(-2px); box-shadow: 0 4px 8px rgba(0,0,0,0.1); }
.btn-modal-ok, .btn-modal-primary { background-color: var(--color-primary, #2c3e50); color: var(--color-text-on-active, #fff); }
.btn-modal-ok:hover, .btn-modal-primary:hover { background-color: var(--color-secondary, #4a69bd); }
.btn-modal-cancel { background-color: #f0f2f5; color: var(--text-color-strong, #2c3e50); border: 1px solid var(--border-color-light, #e3eaf6); }
.btn-modal-cancel:hover { background-color: #e6eaf3; border-color: var(--border-color-medium, #c5cde0); }
        
footer { width: 100%; text-align: center; padding: 25px 20px; font-size: 0.9em; color: var(--text-color-footer); background-color: var(--bg-footer); border-top: 1px solid var(--border-color-footer); }

@media (max-width: 900px) {
    body { padding: 0; }
    .page-wrapper { flex-direction: column; gap: 0; padding-right:0; padding-bottom:0;}
    .menu-container { width: 100%; border-radius: 0; padding: 20px 15px; position: static; height: auto; box-shadow: 0 2px 8px var(--shadow-sidebar-mobile); }
    .menu-header { margin-bottom: 20px; }
    .menu-header h1 { font-size: 1.8em; }
    .menu-header p { font-size: 1.1em; }
    .menu-list { display: flex; flex-wrap: wrap; justify-content: center; gap: 10px; }
    .menu-item { margin-bottom: 0; }
    .menu-item a { padding: 10px 12px; font-size: 0.95em; }
    .menu-icon { margin-right: 10px; font-size: 1.2em; }
    main.content { margin: 20px 15px 0 15px; padding: 25px 20px; max-width: none; border-radius: 10px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); }
    main.content h2 { font-size: 1.8em; }
    main.content #introducao-guia h2 { padding-left: 10px; border-left-width: 4px; } /* H2 principal do guia no mobile */
    main.content #guia-por-tipo h2 { text-align: center; display: block; border-bottom: none; } /* H2 do acordeão no mobile */
    /* H2 da página de Pontos no mobile (se for centralizado e sem borda) */
    /* main.content #pontos-titulo h2 { text-align: center; display: block; border-bottom: none; } */

    .accordion-header { font-size: 1.15em; padding: 12px 15px; }
    .accordion-content { padding: 15px; }
    .user-menu-container { top: 20px; right: 20px; }
    .user-top-right { width: 40px; height: 40px; }
    .user-top-right svg { width: 20px; height: 20px; }
    .dropdown-menu { min-width: 180px; padding: 12px; }
    .dropdown-menu h3 { font-size: 1em; margin-bottom: 8px; padding-bottom: 6px; }
    .dropdown-menu ul li a { font-size: 0.9em; padding: 6px 8px; white-space: nowrap; }
    .dropdown-menu .logout-button { padding: 8px 12px; font-size: 0.95em; }
    .container-das-caixas { grid-template-columns: 1fr; }
    .search-container { padding: 15px; }
    .search-container .search-icon { padding-left: 10px; }
    .ponto-card p.card-description { min-height: auto; }
}
@media (max-width: 600px) {
    .menu-container { flex-direction: column; align-items: center; padding-top: 15px; }
    .menu-header { margin-bottom: 15px; text-align: center; }
    .menu-list { flex-direction: column; align-items: center; width: 100%; }
    .menu-item { margin-bottom: 8px; width: 80%; }
    .menu-item a { text-align: center; justify-content: center; }
    main.content h2 { font-size: 1.6em; }
    .ponto-card h3 { font-size: 1.15em; } /* De pontos.html */
    .ponto-card p, .info-line { font-size: 0.9em; } /* De pontos.html */
    .action-link { font-size: 0.9em; } /* De pontos.html */
    .custom-modal-box { padding: 20px 25px; max-width: calc(100% - 30px); }
    .custom-modal-buttons { flex-direction: column; gap: 10px; }
    .custom-modal-buttons button { width: 100%; }
}
    </style>
</head>
<body>
    <div class="user-menu-container">
        <div class="user-top-right" id="userIcon" title="Área do Usuário" aria-label="Área do Usuário" tabindex="0" role="button">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
                <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
            </svg>
        </div>
        <div class="dropdown-menu" id="userDropdown">
            <h3>Opções do Usuário</h3>
            <ul>
                <li><a href="meu-perfil.html">Meu Perfil (em breve)</a></li>
                <li><a href="minhas-doacoes.html">Minhas Doações (em breve)</a></li>
            </ul>
            <a href="login.html" class="logout-button">Sair da conta</a>
        </div>
    </div>

    <div class="page-wrapper">
        <div class="menu-container">
            <div class="menu-header">
                <h1>EcoTech</h1>
                <p>BH</p>
            </div>
            <ul class="menu-list">
                <li class="menu-item"><a href="index.html"><i class="fas fa-home menu-icon"></i>Início</a></li>
                <li class="menu-item"><a href="sobre.html"><i class="fas fa-info-circle menu-icon"></i>Sobre o Projeto</a></li>
                <li class="menu-item"><a href="guia.html"><i class="fas fa-book menu-icon"></i>Guia de Descarte</a></li>
                <li class="menu-item"><a href="doacoes.html"><i class="fas fa-hand-holding-heart menu-icon"></i>Doações</a></li>
                <li class="menu-item"><a href="pontos.html"><i class="fas fa-map-marker-alt menu-icon"></i>Pontos de Descarte</a></li>
            </ul>
        </div>
        <main class="content" role="main">
            <section>
                <h2>Seja Bem Vindo!!</h2>
            </section>

            <section>
                <p>
                    A EcoTech BH é um projeto criado para transformar a maneira como Belo Horizonte lida com o descarte de equipamentos eletrônicos. Aqui, você encontra informações e soluções para descartar seus aparelhos de forma consciente e responsável, ajudando a preservar o meio ambiente e a construir um futuro mais sustentável para toda a nossa BH.
                </p>
                <p>
                    Nossa empresa é baseada no Conceito dos 3R's:
                </p>

                <div class="container-das-caixas">
                    <section class="box">
                        <p><strong>➖ Reduzir:</strong> Buscamos incentivar o uso consciente, priorizando o conserto ou upgrade dos equipamentos ao invés de comprar novos sem necessidade.</p>
                    </section>
                    <section class="box">
                        <p><strong>🔄 Reutilizar:</strong> Quando os dispositivos ainda funcionam, damos uma nova vida a eles, contribuindo para o reaproveitamento e ajudando quem precisa.</p>
                    </section>
                    <section class="box">
                        <p><strong>♻️ Reciclar:</strong> Quando não tem mais jeito, descartamos o lixo eletrônico de forma correta, para proteger o meio ambiente e a saúde de todo mundo.</p>
                    </section>
                </div>
            </section>
        </main>
    </div>

    <div id="customConfirmOverlay" class="custom-modal-overlay">
      <div id="customConfirmBox" class="custom-modal-box">
        <p id="customConfirmMessage">Você tem certeza?</p>
        <div class="custom-modal-buttons">
          <button id="customConfirmOkButton" class="btn-modal-ok">OK</button>
          <button id="customConfirmCancelButton" class="btn-modal-cancel">Cancelar</button>
        </div>
      </div>
    </div>

    <div id="customAlertOverlay" class="custom-modal-overlay">
      <div id="customAlertBox" class="custom-modal-box">
        <p id="customAlertMessage">Mensagem de alerta!</p>
        <div class="custom-modal-buttons">
          <button id="customAlertOkButton" class="btn-modal-ok">OK</button>
        </div>
      </div>
    </div>

    <footer>
        <p>© 2025 EcoTech BH - Todos os direitos reservados.</p>
    </footer>

<script>
// Função para exibir o modal de ALERTA personalizado
function showCustomAlert(message) {
  return new Promise((resolve) => {
    const overlay = document.getElementById('customAlertOverlay');
    const messageEl = document.getElementById('customAlertMessage');
    const okButton = document.getElementById('customAlertOkButton');
    if (!overlay || !messageEl || !okButton) { console.error("Elementos do modal de alerta não encontrados."); return resolve(false); }
    messageEl.textContent = message;
    overlay.style.display = 'flex';
    const newOkButton = okButton.cloneNode(true);
    okButton.parentNode.replaceChild(newOkButton, okButton);
    let escapeListener;
    const handleClose = () => {
      overlay.style.display = 'none';
      document.removeEventListener('keydown', escapeListener);
      resolve(true);
    };
    newOkButton.addEventListener('click', handleClose);
    escapeListener = (event) => { if (event.key === 'Escape' && overlay.style.display === 'flex') handleClose(); };
    document.addEventListener('keydown', escapeListener);
  });
}

// Função para exibir o modal de CONFIRMAÇÃO personalizado
function showCustomConfirm(message) {
  return new Promise((resolve) => {
    const overlay = document.getElementById('customConfirmOverlay');
    const messageEl = document.getElementById('customConfirmMessage');
    const okButton = document.getElementById('customConfirmOkButton');
    const cancelButton = document.getElementById('customConfirmCancelButton');
    if (!overlay || !messageEl || !okButton || !cancelButton) { console.error("Elementos do modal de confirmação não encontrados."); return resolve(false); }
    messageEl.textContent = message;
    overlay.style.display = 'flex';
    const newOkButton = okButton.cloneNode(true);
    okButton.parentNode.replaceChild(newOkButton, okButton);
    const newCancelButton = cancelButton.cloneNode(true);
    cancelButton.parentNode.replaceChild(newCancelButton, cancelButton);
    let escapeListener;
    const handleResolve = (value) => {
      overlay.style.display = 'none';
      document.removeEventListener('keydown', escapeListener);
      resolve(value);
    };
    newOkButton.addEventListener('click', () => handleResolve(true));
    newCancelButton.addEventListener('click', () => handleResolve(false));
    escapeListener = (event) => { if (event.key === 'Escape' && overlay.style.display === 'flex') handleResolve(false); };
    document.addEventListener('keydown', escapeListener);
  });
}

document.addEventListener('DOMContentLoaded', function() {
    const userIcon = document.getElementById('userIcon');
    const userDropdown = document.getElementById('userDropdown');
    const currentPath = window.location.pathname.split('/').pop() || 'index.html';

    if (userIcon && userDropdown) {
        userIcon.title = "Opções do Usuário";
        userIcon.setAttribute('aria-label', 'Opções do Usuário');
        userIcon.addEventListener('click', function(event) {
            userDropdown.classList.toggle('active');
            event.stopPropagation();
        });
        const logoutButtonFromDropdown = userDropdown.querySelector('.logout-button');
        if (logoutButtonFromDropdown) {
            logoutButtonFromDropdown.addEventListener('click', async function(event) {
                event.preventDefault();
                const userChoice = await showCustomConfirm("Você tem certeza que deseja sair?");
                if (userChoice) {
                    localStorage.removeItem('usuarioLogadoEcoTechBH');
                    await showCustomAlert('Você saiu! Redirecionando para login...');
                    window.location.href = 'login.html';
                }
            });
        }
    }

    document.addEventListener('click', function(event) {
        if (userDropdown && userIcon && !userDropdown.contains(event.target) && !userIcon.contains(event.target) && userDropdown.classList.contains('active')) {
            userDropdown.classList.remove('active');
        }
    });

    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            if (userDropdown && userDropdown.classList.contains('active')) {
                userDropdown.classList.remove('active');
            }
        }
    });

    const menuItems = document.querySelectorAll('.menu-list a');
    menuItems.forEach(item => {
        const itemHref = item.getAttribute('href');
        if (itemHref === currentPath || (currentPath === 'index.html' && itemHref === '')) { 
             item.classList.add('active');
        } else {
            item.classList.remove('active');
        }
    });

    const doacoesLink = document.querySelector('.menu-item a[href="doacoes.html"]');
    if (doacoesLink) {
        doacoesLink.addEventListener('click', async function(event) {
            const estaLogado = localStorage.getItem('usuarioLogadoEcoTechBH') === 'true';
            if (!estaLogado) {
                event.preventDefault();
                localStorage.setItem('redirectAfterLogin', 'doacoes.html');
                await showCustomAlert("Para realizar esta Ação é necessário realizar o login.");
                window.location.href = 'login.html';
            }
        });
    }

    if (currentPath === 'doacoes.html') {
        const estaLogado = localStorage.getItem('usuarioLogadoEcoTechBH') === 'true';
        if (!estaLogado) {
            document.body.style.visibility = 'hidden'; 
            localStorage.setItem('redirectAfterLogin', 'doacoes.html');
            (async () => {
                await showCustomAlert("Para acessar a página de Doações, é necessário realizar o login.");
                window.location.href = 'login.html';
            })();
        } else {
            // Lógica JS específica da doacoes.html (formulário) iria aqui se estivesse no DOMContentLoaded
            // Como o seu script original da doacoes.html já tem seu próprio DOMContentLoaded
            // ou funções globais, esta seção fica para lógicas pós-load condicionais ao login.
            // No seu caso, o script da doacoes.html que você me enviou já continha toda a lógica do form.
            // Este script comum aqui irá SUBSTITUIR o script da doacoes.html, então
            // A LÓGICA DO FORMULÁRIO DA DOAÇÕES PRECISA SER ADICIONADA AQUI DENTRO DESTE ELSE.
             const coletaRadios = document.querySelectorAll('input[name="coleta"]');
             const enderecoContainer = document.getElementById('endereco-container');
             const dataColetaInput = document.getElementById('data-coleta');
             const cepInput = document.getElementById('cep');
             const ruaInput = document.getElementById('rua');
             const numeroCasaInput = document.getElementById('numero-casa');
             const complementoInput = document.getElementById('complemento');
             const bairroInput = document.getElementById('bairro');

             const requiredAddressFields = [dataColetaInput, cepInput, ruaInput, numeroCasaInput, bairroInput];
             const allAddressFields = [dataColetaInput, cepInput, ruaInput, numeroCasaInput, complementoInput, bairroInput];

             const donationForm = document.querySelector('main.content form'); // Seletor mais específico
             const formFeedbackMessage = document.getElementById('form-feedback-message');

             if(dataColetaInput) {
                 const today = new Date();
                 const year = today.getFullYear();
                 const month = String(today.getMonth() + 1).padStart(2, '0');
                 const day = String(today.getDate()).padStart(2, '0');
                 const minDate = `${year}-${month}-${day}`;
                 dataColetaInput.setAttribute('min', minDate);
             }

             function clearErrorStyles() {
                 if (!donationForm) return;
                 const errorFields = donationForm.querySelectorAll('.error');
                 errorFields.forEach(field => field.classList.remove('error'));
                 allAddressFields.forEach(field => field && field.classList.remove('error'));
             }

             function showFeedbackMessage(message, type) {
                 if (!formFeedbackMessage) return;
                 const icon = type === 'success' ? '<i class="fas fa-check-circle" style="color: inherit;"></i>' : '<i class="fas fa-exclamation-circle" style="color: inherit;"></i>';
                 formFeedbackMessage.innerHTML = `${icon} <span>${message}</span>`;
                 formFeedbackMessage.className = `form-message ${type}`;
                 formFeedbackMessage.style.display = 'flex';
             }

             function hideFeedbackMessage() {
                 if (formFeedbackMessage) formFeedbackMessage.style.display = 'none';
             }

             if (coletaRadios.length > 0 && enderecoContainer) {
                 coletaRadios.forEach(radio => {
                     radio.addEventListener('change', () => {
                         hideFeedbackMessage();
                         clearErrorStyles();
                         if (radio.value === 'sim' && radio.checked) {
                             enderecoContainer.style.display = 'block';
                             requiredAddressFields.forEach(field => field && field.setAttribute('required', 'required'));
                         } else {
                             enderecoContainer.style.display = 'none';
                             allAddressFields.forEach(field => {
                                 if (field) {
                                     if (requiredAddressFields.includes(field)) {
                                         field.removeAttribute('required');
                                     }
                                     field.value = '';
                                     field.classList.remove('error');
                                 }
                             });
                         }
                     });
                 });
             }

             if (donationForm) {
                 donationForm.addEventListener('submit', function(event) {
                     event.preventDefault();
                     hideFeedbackMessage();
                     clearErrorStyles();
                     let isValid = true;
                     const errorMessages = [];
                     const tipoItem = document.getElementById('tipo-item');
                     if (!tipoItem.value.trim()) { isValid = false; errorMessages.push("O campo 'Item para doação' é obrigatório."); tipoItem.classList.add('error');}
                     const descricao = document.getElementById('descricao');
                     if (!descricao.value.trim()) { isValid = false; errorMessages.push("O campo 'Descrição do item' é obrigatório."); descricao.classList.add('error');}
                     const quantidade = document.getElementById('quantidade');
                     if (!quantidade.value.trim() || parseInt(quantidade.value, 10) < 1) { isValid = false; errorMessages.push("O campo 'Quantidade' deve ser um número igual ou maior que 1."); quantidade.classList.add('error');}
                     const coletaSelecionada = document.querySelector('input[name="coleta"]:checked');
                     if (!coletaSelecionada) { isValid = false; errorMessages.push("Por favor, selecione se precisa que o item seja buscado ('Sim' ou 'Não').");
                     } else if (coletaSelecionada.value === 'sim') {
                         if (dataColetaInput && !dataColetaInput.value.trim()) { isValid = false; errorMessages.push("O campo 'Data para coleta' é obrigatório."); dataColetaInput.classList.add('error');
                         } else if (dataColetaInput) { const dataSelecionada = new Date(dataColetaInput.value + "T00:00:00"); const hoje = new Date(); hoje.setHours(0,0,0,0); if (dataSelecionada < hoje) { isValid = false; errorMessages.push("A 'Data para coleta' não pode ser no passado."); dataColetaInput.classList.add('error'); } }
                         if (cepInput && !cepInput.value.trim()) { isValid = false; errorMessages.push("O campo 'CEP' é obrigatório."); cepInput.classList.add('error'); }
                         if (ruaInput && !ruaInput.value.trim()) { isValid = false; errorMessages.push("O campo 'Rua' é obrigatório."); ruaInput.classList.add('error'); }
                         if (numeroCasaInput && !numeroCasaInput.value.trim()) { isValid = false; errorMessages.push("O campo 'Número' é obrigatório."); numeroCasaInput.classList.add('error'); }
                         if (bairroInput && !bairroInput.value.trim()) { isValid = false; errorMessages.push("O campo 'Bairro' é obrigatório."); bairroInput.classList.add('error'); }
                     }
                     if (isValid) {
                         const formData = { /* ... seu objeto formData ... */ }; console.log('Dados:', formData); showFeedbackMessage('Pedido de doação registrado!', 'success'); donationForm.reset(); if (enderecoContainer) enderecoContainer.style.display = 'none'; allAddressFields.forEach(field => { if(field){ if(requiredAddressFields.includes(field)) field.removeAttribute('required'); field.value = ''; field.classList.remove('error');}});
                     } else { showFeedbackMessage('Corrija os erros: ' + errorMessages.join(' '), 'error'); const firstErrorField = donationForm.querySelector('.error'); if (firstErrorField) firstErrorField.focus(); }
                 });
             }
        }
    }

    if (currentPath === 'guia.html') {
        const accordionHeaders = document.querySelectorAll('.accordion-header');
        if (accordionHeaders.length > 0) {
            function toggleAccordionItem(headerElement) {
                const contentId = headerElement.getAttribute('aria-controls');
                const content = document.getElementById(contentId);
                const isExpanded = headerElement.getAttribute('aria-expanded') === 'true';
                headerElement.setAttribute('aria-expanded', !isExpanded);
                content.style.display = isExpanded ? 'none' : 'block';
            }
            accordionHeaders.forEach(header => {
                header.addEventListener('click', function () { toggleAccordionItem(this); });
                header.addEventListener('keydown', function (event) { if (event.key === 'Enter' || event.key === ' ') { event.preventDefault(); toggleAccordionItem(this);}});
            });
        }
    }
    
    if (currentPath === 'pontos.html' && typeof filtrarCards === 'function') {
      filtrarCards(); 
    }
});

// A função filtrarCards() da pontos.html deve estar definida FORA do DOMContentLoaded,
// se ela for chamada por onkeyup="filtrarCards()" no HTML.
// Se você a moveu para dentro do DOMContentLoaded, o onkeyup não a encontrará.
// Verifique o arquivo pontos.html original para a definição de filtrarCards().
// Ex: function filtrarCards() { ... } (deve estar aqui se for global)
</script>

</body>
</html>